C51 COMPILER V9.60.7.0   ADC                                                               02/14/2025 17:51:38 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\Release\Objects\adc.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\Hardware\adc.c OPTIMIZE(8,SIZE) BROWSE INTVECTOR(0X8000) INCDIR(..
                    -\..\Libraries\Include;..\..\User;..\..\Hardware;..\..\App) INTERVAL(3) DEBUG OBJECTEXTEND PRINT(.\Release\Listings\adc.l
                    -st) OBJECT(.\Release\Objects\adc.obj)

line level    source

   1          #include "adc.h"
*** WARNING C322 IN LINE 71 OF \BaiduSyncdisk\A_WorkSt\Aworkst\2025-01-22-project250122-À’–¿-∞¥ƒ¶“«”Ô“ÙøÓ-SX384\code\pro
             -ject-250122-TX8C1011\Libraries\Include\debug.h: unknown identifier
   2          
   3          void adc_config(void)
   4          {
   5   1          // P04 AIN4 Ê£ÄÊµãÂÖÖÁîµÂè£‰º†ËøáÊù•ÁöÑadÂÄº
   6   1          P0_MD1 |= 0x03;        // Ê®°ÊãüÊ®°Âºè
   7   1          P0_AIOEN |= 0x01 << 4; // ‰ΩøËÉΩÊ®°ÊãüÂäüËÉΩ
   8   1      
   9   1          // P06 AIN6 Ê£ÄÊµãÁîµÊ±†ÂàÜÂéãÂêéÁöÑadÂÄº
  10   1          P0_MD1 |= 0x03 << 4;   // Ê®°ÊãüÊ®°Âºè
  11   1          P0_AIOEN |= 0x01 << 6; // ‰ΩøËÉΩÊ®°ÊãüÂäüËÉΩ
  12   1      
  13   1          AIP_CON2 |= 0xC0; // ‰ΩøËÉΩADC‰∏≠CMP‰ΩøËÉΩ‰ø°Âè∑ÂíåCMPÊ†°ÂáÜÂäüËÉΩ
  14   1          AIP_CON4 |= 0x01; // ‰ΩøËÉΩADCÂÅèÁΩÆÁîµÊµÅÔºåÂèÇËÄÉÁîµÂéãÈÄâÊã©ÂÜÖÈÉ®2.4V(Note: ‰ΩøÁî®ÂÜÖÈÉ®ÂèÇËÄÉÊó∂Ô
             -ºåËäØÁâáÈúÄÂú®5VÁîµÂéã‰æõÁîµ‰∏ã)
  15   1      }
  16          
  17          // ÂàáÊç¢adcÊ£ÄÊµãÁöÑÂºïËÑö
  18          void adc_sel_channel(u8 adc_channel)
  19          {
  20   1      #if 1 // ÂèØ‰ª•ËäÇÁúÅ7Â≠óËäÇÁ®ãÂ∫èÁ©∫Èó¥
  21   1          // ÈÅøÂÖçÂâçÂêéÂàáÊç¢Áõ∏ÂêåÁöÑÈÄöÈÅìÔºåËäÇÁúÅÊó∂Èó¥Ôºö
  22   1          static u8 last_adc_channel = ADC_CHANNEL_NONE;
  23   1          if (last_adc_channel == adc_channel)
  24   1          {
  25   2              return;
  26   2          }
  27   1          last_adc_channel = adc_channel;
  28   1      #endif // ÂèØ‰ª•ËäÇÁúÅ7Â≠óËäÇÁ®ãÂ∫èÁ©∫Èó¥
  29   1      
  30   1          // Ê†πÊçÆ‰º†ÂèÇÔºåÂàáÊç¢ÊàêÂØπÂ∫îÁöÑÈÄöÈÅì
  31   1          switch (adc_channel)
  32   1          {
  33   2          case ADC_CHANNEL_CHARGE:
  34   2              // P04 AIN4 Ê£ÄÊµãÂÖÖÁîµÂè£‰º†ËøáÊù•ÁöÑadÂÄº
  35   2              ADC_CHS0 = 0x04; // ËΩØ‰ª∂Ëß¶ÂèëÔºåP04ÈÄöË∑Ø
  36   2      
  37   2              AIP_CON3 &= ~(0x03 << 2); // ÂÖ≥Èó≠Â§ñÈÉ®ÂèÇËÄÉÁîµÂéã
  38   2              AIP_CON4 |= 0x01 << 4;    // ‰ΩøËÉΩÂÜÖÈÉ®ÂèÇËÄÉÁîµÂéã
  39   2              break;
  40   2      
  41   2          case ADC_CHANNEL_BAT:
  42   2              // P06 AIN6 Ê£ÄÊµãÁîµÊ±†ÂàÜÂéãÂêéÁöÑadÂÄº
  43   2              ADC_CHS0 = 0x06; // ËΩØ‰ª∂Ëß¶ÂèëÔºåP06ÈÄöË∑Ø
  44   2      
  45   2              AIP_CON3 &= ~(0x03 << 2); // ÂÖ≥Èó≠Â§ñÈÉ®ÂèÇËÄÉÁîµÂéã
  46   2              AIP_CON4 |= 0x01 << 4;    // ‰ΩøËÉΩÂÜÖÈÉ®ÂèÇËÄÉÁîµÂéã
  47   2              break;
  48   2      
  49   2          case ADC_CHANNEL_KEY_SCAN:
  50   2              // ÂÅáËÆæÁî® P11 AIN9 Êù•Ê£ÄÊµãadÊåâÈîÆ ÔºàÊõ¥Êç¢Êùø‰πãÂêéÊòØÁõ¥Êé•Ê£ÄÊµãÁîµÂπ≥Ôºâ
C51 COMPILER V9.60.7.0   ADC                                                               02/14/2025 17:51:38 PAGE 2   

  51   2              ADC_CHS0 = 0x09; // ËΩØ‰ª∂Ëß¶ÂèëÔºåP11ÈÄöË∑Ø
  52   2      
  53   2              // ÂèÇËÄÉÁîµÂéãÊîπ‰∏∫VDD
  54   2              AIP_CON4 &= ~(0x01 << 4); // ÂÖ≥Èó≠ÂÜÖÈÉ®ÂèÇËÄÉ
  55   2              AIP_CON3 |= 0x02 << 2;    // ‰ΩøÁî®VCCA‰Ωú‰∏∫ÂèÇËÄÉÁîµÂéã
  56   2              break;
  57   2      
  58   2          case ADC_CHANNEL_MOTOR: // ËøáÊµÅÊ£ÄÊµãÈÄöÈÅì
  59   2      
  60   2              break;
  61   2      
  62   2          default:
  63   2              break;
  64   2          }
  65   1      
  66   1          ADC_CFG0 = 0x14; // ‰ΩøËÉΩA/DËΩ¨Êç¢Ôºå‰ΩøËÉΩÈÄöÈÅì0ËΩ¨Êç¢
  67   1          delay_ms(1);     // ÂàáÊç¢adcÊ£ÄÊµãÁöÑÂºïËÑöÂêéÔºåË¶ÅÂª∂Êó∂‰∏ÄÊÆµÊó∂Èó¥ÔºåÁ≠âÂæÖadcÁ®≥ÂÆöÔºåÈò≤Ê≠¢ÊÑèÊ
             -ñô‰πãÂ§ñÁöÑÊ£ÄÊµãÁªìÊûú
  68   1      }
  69          
  70          // Ëé∑ÂèñadcÂçïÊ¨°ËΩ¨Êç¢ÂêéÁöÑÂÄº
  71          u16 adc_get_val_once(void)
  72          {
  73   1          u16 g_temp_value = 0;
  74   1      
  75   1          ADC_CFG0 |= 0x01; // Ëß¶ÂèëADC0ËΩ¨Êç¢
  76   1          while (!(ADC_STA & 0x02))
  77   1              ;                                          // Á≠âÂæÖËΩ¨Êç¢ÂÆåÊàê
  78   1          ADC_STA = 0x02;                                // Ê∏ÖÈô§ADC0ËΩ¨Êç¢ÂÆåÊàêÊ†áÂøó‰Ωç
  79   1          g_temp_value = (ADC_DATAH0 << 4) | ADC_DATAL0; // ËØªÂèñADC0ÁöÑÂÄº
  80   1      
  81   1          return g_temp_value;
  82   1      }
  83          
  84          // Ëé∑ÂèñadcÈááÈõÜ+Êª§Ê≥¢ÂêéÁöÑÂÄº
  85          u16 adc_get_val(void)
  86          {
  87   1          u8 i = 0; // adcÈááÈõÜÊ¨°Êï∞ÁöÑËÆ°Êï∞
  88   1          u16 g_temp_value = 0;
  89   1          u32 g_tmpbuff = 0;
  90   1          u16 g_adcmax = 0;
  91   1          u16 g_adcmin = 0xFFFF;
  92   1      
  93   1          // ÈááÈõÜ20Ê¨°ÔºåÂéªÊéâÂâç‰∏§Ê¨°ÈááÊ†∑ÔºåÂÜçÂéªÊéâ‰∏Ä‰∏™ÊúÄÂ§ßÂÄºÂíå‰∏Ä‰∏™ÊúÄÂ∞èÂÄºÔºåÂÜçÂèñÂπ≥ÂùáÂÄº
  94   1          for (i = 0; i < 20; i++)
  95   1          {
  96   2              // ADC_CFG0 |= 0x01; // Ëß¶ÂèëADC0ËΩ¨Êç¢
  97   2              // while (!(ADC_STA & 0x02))
  98   2              //     ;                                          // Á≠âÂæÖËΩ¨Êç¢ÂÆåÊàê
  99   2              // ADC_STA = 0x02;                                // Ê∏ÖÈô§ADC0ËΩ¨Êç¢ÂÆåÊàêÊ†áÂøó‰Ωç
 100   2              // g_temp_value = (ADC_DATAH0 << 4) | ADC_DATAL0; // ËØªÂèñADC0ÁöÑÂÄº
 101   2      
 102   2              g_tmpbuff = adc_get_val_once();
 103   2      
 104   2              if (i < 2)
 105   2                  continue; // ‰∏¢ÂºÉÂâç‰∏§Ê¨°ÈááÊ†∑ÁöÑ
 106   2              if (g_temp_value > g_adcmax)
 107   2                  g_adcmax = g_temp_value; // ÊúÄÂ§ß
 108   2              if (g_temp_value < g_adcmin)
 109   2                  g_adcmin = g_temp_value; // ÊúÄÂ∞è
 110   2              g_tmpbuff += g_temp_value;
 111   2          }
C51 COMPILER V9.60.7.0   ADC                                                               02/14/2025 17:51:38 PAGE 3   

 112   1          g_tmpbuff -= g_adcmax;           // ÂéªÊéâ‰∏Ä‰∏™ÊúÄÂ§ß
 113   1          g_tmpbuff -= g_adcmin;           // ÂéªÊéâ‰∏Ä‰∏™ÊúÄÂ∞è
 114   1          g_temp_value = (g_tmpbuff >> 4); // Èô§‰ª•16ÔºåÂèñÂπ≥ÂùáÂÄº
 115   1      
 116   1          return g_temp_value;
 117   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    319    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
